%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 91.5625 3.1875 321.938 145.5
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 148.688 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
91.562500 145.500000 translate
1.000000 -1.000000 scale
0.000000 0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		230.375000 def
/Mheight	142.312500 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-0.114531 0.1458 -0.123541 2.34023 [
[.03127 -0.0125 -3 -9 ]
[.03127 -0.0125 3 0 ]
[.17707 -0.0125 -3 -9 ]
[.17707 -0.0125 3 0 ]
[.32287 -0.0125 -3 -9 ]
[.32287 -0.0125 3 0 ]
[.46867 -0.0125 -3 -9 ]
[.46867 -0.0125 3 0 ]
[.61447 -0.0125 -3 -9 ]
[.61447 -0.0125 3 0 ]
[.76027 -0.0125 -3 -9 ]
[.76027 -0.0125 3 0 ]
[.90607 -0.0125 -3 -9 ]
[.90607 -0.0125 3 0 ]
[ 0 0 -0.125 0 ]
[.5 -0.0125 -5 -21 ]
[.5 -0.0125 5 -9 ]
[-0.0125 .11048 -18 -4.5 ]
[-0.0125 .11048 0 4.5 ]
[-0.0125 .22749 -24 -4.5 ]
[-0.0125 .22749 0 4.5 ]
[-0.0125 .34451 -18 -4.5 ]
[-0.0125 .34451 0 4.5 ]
[-0.0125 .46152 -24 -4.5 ]
[-0.0125 .46152 0 4.5 ]
[-0.0125 .57853 -18 -4.5 ]
[-0.0125 .57853 0 4.5 ]
[ 0 0 -0.125 0 ]
[-0.01875 .30902 -34.125 -6 ]
[-0.01875 .30902 -24 6 ]
[ 0 .61803 .125 0 ]
[ 1 0 .125 0 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.03127 0 m
.03127 .00625 L
s
[(1)] .03127 -0.0125 0 1 Mshowa
.17707 0 m
.17707 .00625 L
s
[(2)] .17707 -0.0125 0 1 Mshowa
.32287 0 m
.32287 .00625 L
s
[(3)] .32287 -0.0125 0 1 Mshowa
.46867 0 m
.46867 .00625 L
s
[(4)] .46867 -0.0125 0 1 Mshowa
.61447 0 m
.61447 .00625 L
s
[(5)] .61447 -0.0125 0 1 Mshowa
.76027 0 m
.76027 .00625 L
s
[(6)] .76027 -0.0125 0 1 Mshowa
.90607 0 m
.90607 .00625 L
s
[(7)] .90607 -0.0125 0 1 Mshowa
.125 Mabswid
.06043 0 m
.06043 .00375 L
s
.08959 0 m
.08959 .00375 L
s
.11875 0 m
.11875 .00375 L
s
.14791 0 m
.14791 .00375 L
s
.20623 0 m
.20623 .00375 L
s
.23539 0 m
.23539 .00375 L
s
.26455 0 m
.26455 .00375 L
s
.29371 0 m
.29371 .00375 L
s
.35203 0 m
.35203 .00375 L
s
.38119 0 m
.38119 .00375 L
s
.41035 0 m
.41035 .00375 L
s
.43951 0 m
.43951 .00375 L
s
.49783 0 m
.49783 .00375 L
s
.52699 0 m
.52699 .00375 L
s
.55615 0 m
.55615 .00375 L
s
.58531 0 m
.58531 .00375 L
s
.64363 0 m
.64363 .00375 L
s
.67279 0 m
.67279 .00375 L
s
.70195 0 m
.70195 .00375 L
s
.73111 0 m
.73111 .00375 L
s
.78943 0 m
.78943 .00375 L
s
.81859 0 m
.81859 .00375 L
s
.84775 0 m
.84775 .00375 L
s
.87691 0 m
.87691 .00375 L
s
.00211 0 m
.00211 .00375 L
s
.93523 0 m
.93523 .00375 L
s
.96439 0 m
.96439 .00375 L
s
.99355 0 m
.99355 .00375 L
s
.25 Mabswid
0 0 m
1 0 L
s
gsave
.5 -0.0125 -66 -25 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 20 translate 1 -1 scale
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(r) show
1.000 setlinewidth
grestore
0 .11048 m
.00625 .11048 L
s
[(0.1)] -0.0125 .11048 1 0 Mshowa
0 .22749 m
.00625 .22749 L
s
[(0.15)] -0.0125 .22749 1 0 Mshowa
0 .34451 m
.00625 .34451 L
s
[(0.2)] -0.0125 .34451 1 0 Mshowa
0 .46152 m
.00625 .46152 L
s
[(0.25)] -0.0125 .46152 1 0 Mshowa
0 .57853 m
.00625 .57853 L
s
[(0.3)] -0.0125 .57853 1 0 Mshowa
.125 Mabswid
0 .13388 m
.00375 .13388 L
s
0 .15729 m
.00375 .15729 L
s
0 .18069 m
.00375 .18069 L
s
0 .20409 m
.00375 .20409 L
s
0 .2509 m
.00375 .2509 L
s
0 .2743 m
.00375 .2743 L
s
0 .2977 m
.00375 .2977 L
s
0 .3211 m
.00375 .3211 L
s
0 .36791 m
.00375 .36791 L
s
0 .39131 m
.00375 .39131 L
s
0 .41471 m
.00375 .41471 L
s
0 .43811 m
.00375 .43811 L
s
0 .48492 m
.00375 .48492 L
s
0 .50832 m
.00375 .50832 L
s
0 .53172 m
.00375 .53172 L
s
0 .55513 m
.00375 .55513 L
s
0 .08708 m
.00375 .08708 L
s
0 .06368 m
.00375 .06368 L
s
0 .04028 m
.00375 .04028 L
s
0 .01687 m
.00375 .01687 L
s
0 .60193 m
.00375 .60193 L
s
.25 Mabswid
0 0 m
0 .61803 L
s
gsave
-0.01875 .30902 -95.125 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 20 translate 1 -1 scale
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(m) show
1.000 setlinewidth
grestore
.03127 .61178 m
.03127 .61803 L
s
.17707 .61178 m
.17707 .61803 L
s
.32287 .61178 m
.32287 .61803 L
s
.46867 .61178 m
.46867 .61803 L
s
.61447 .61178 m
.61447 .61803 L
s
.76027 .61178 m
.76027 .61803 L
s
.90607 .61178 m
.90607 .61803 L
s
.125 Mabswid
.06043 .61428 m
.06043 .61803 L
s
.08959 .61428 m
.08959 .61803 L
s
.11875 .61428 m
.11875 .61803 L
s
.14791 .61428 m
.14791 .61803 L
s
.20623 .61428 m
.20623 .61803 L
s
.23539 .61428 m
.23539 .61803 L
s
.26455 .61428 m
.26455 .61803 L
s
.29371 .61428 m
.29371 .61803 L
s
.35203 .61428 m
.35203 .61803 L
s
.38119 .61428 m
.38119 .61803 L
s
.41035 .61428 m
.41035 .61803 L
s
.43951 .61428 m
.43951 .61803 L
s
.49783 .61428 m
.49783 .61803 L
s
.52699 .61428 m
.52699 .61803 L
s
.55615 .61428 m
.55615 .61803 L
s
.58531 .61428 m
.58531 .61803 L
s
.64363 .61428 m
.64363 .61803 L
s
.67279 .61428 m
.67279 .61803 L
s
.70195 .61428 m
.70195 .61803 L
s
.73111 .61428 m
.73111 .61803 L
s
.78943 .61428 m
.78943 .61803 L
s
.81859 .61428 m
.81859 .61803 L
s
.84775 .61428 m
.84775 .61803 L
s
.87691 .61428 m
.87691 .61803 L
s
.00211 .61428 m
.00211 .61803 L
s
.93523 .61428 m
.93523 .61803 L
s
.96439 .61428 m
.96439 .61803 L
s
.99355 .61428 m
.99355 .61803 L
s
.25 Mabswid
0 .61803 m
1 .61803 L
s
.99375 .11048 m
1 .11048 L
s
.99375 .22749 m
1 .22749 L
s
.99375 .34451 m
1 .34451 L
s
.99375 .46152 m
1 .46152 L
s
.99375 .57853 m
1 .57853 L
s
.125 Mabswid
.99625 .13388 m
1 .13388 L
s
.99625 .15729 m
1 .15729 L
s
.99625 .18069 m
1 .18069 L
s
.99625 .20409 m
1 .20409 L
s
.99625 .2509 m
1 .2509 L
s
.99625 .2743 m
1 .2743 L
s
.99625 .2977 m
1 .2977 L
s
.99625 .3211 m
1 .3211 L
s
.99625 .36791 m
1 .36791 L
s
.99625 .39131 m
1 .39131 L
s
.99625 .41471 m
1 .41471 L
s
.99625 .43811 m
1 .43811 L
s
.99625 .48492 m
1 .48492 L
s
.99625 .50832 m
1 .50832 L
s
.99625 .53172 m
1 .53172 L
s
.99625 .55513 m
1 .55513 L
s
.99625 .08708 m
1 .08708 L
s
.99625 .06368 m
1 .06368 L
s
.99625 .04028 m
1 .04028 L
s
.99625 .01687 m
1 .01687 L
s
.99625 .60193 m
1 .60193 L
s
.25 Mabswid
1 0 m
1 .61803 L
s
.006 w
[ .05 .02 ] 0 setdash
.97619 .06559 m
.84768 .13261 L
.74875 .20065 L
.66956 .2672 L
.60304 .33052 L
.54597 .38881 L
.49609 .44097 L
.45194 .48607 L
.41247 .52376 L
.37696 .5538 L
.34485 .57637 L
.31575 .59179 L
.28929 .60056 L
.26523 .60332 L
.24334 .60076 L
.22344 .59364 L
.20536 .58265 L
.18896 .5685 L
.17412 .55187 L
.16075 .53331 L
.14874 .5134 L
.13804 .49263 L
.12856 .4714 L
.12025 .45008 L
.11309 .429 L
.10702 .40842 L
.10204 .38855 L
.09812 .36963 L
.09527 .35181 L
.09348 .33525 L
.09276 .32005 L
.0931 .30643 L
.09449 .29443 L
.09691 .28417 L
.10031 .27575 L
.10457 .26924 L
.10959 .26472 L
.11513 .26217 L
.12097 .26148 L
.12684 .26272 L
.13246 .26551 L
.13756 .26965 L
.14196 .27477 L
.14554 .2807 L
.14822 .28694 L
.15003 .29317 L
.15103 .29929 L
.15132 .30485 L
.15101 .30997 L
.15022 .31432 L
Mistroke
.14906 .31792 L
Mfstroke
[ .05 .02 .01 .02 ] 0 setdash
.97619 .06559 m
.84768 .13261 L
.74875 .20065 L
.66956 .2672 L
.60304 .33052 L
.54597 .38881 L
.49609 .44097 L
.45194 .48607 L
.41247 .52376 L
.37696 .5538 L
.34485 .57637 L
.31575 .59179 L
.28929 .60056 L
.26523 .60332 L
.24344 .60041 L
.22483 .58589 L
.2086 .55932 L
.19403 .52624 L
.18082 .49067 L
.16887 .45498 L
.15815 .42034 L
.14864 .38782 L
.14032 .35744 L
.1332 .3295 L
.12729 .30407 L
.1226 .2812 L
.11913 .26155 L
.11699 .24557 L
.11614 .23281 L
.11644 .22285 L
.11767 .21552 L
.11966 .21053 L
.12212 .20777 L
.12472 .20699 L
.12672 .20805 L
.1278 .21064 L
.12801 .21425 L
.12738 .21856 L
.12609 .22315 L
s
[ .05 .02 .01 .02 .01 .02 ] 0 setdash
.97619 .06559 m
.84768 .13261 L
.74875 .20065 L
.66956 .2672 L
.60304 .33052 L
.54597 .38881 L
.49652 .43936 L
.45443 .45601 L
.41356 .44341 L
.373 .41944 L
.33351 .39299 L
.29595 .36788 L
.26113 .34543 L
.22948 .32563 L
.20123 .30801 L
.1778 .29119 L
.15869 .27347 L
.14259 .25478 L
.1287 .23594 L
.11658 .21733 L
.10599 .19932 L
.09711 .1824 L
.09023 .16664 L
.08522 .15203 L
.08195 .13846 L
.0803 .12609 L
.08027 .11512 L
.08201 .10586 L
.08553 .09829 L
.09079 .09249 L
.09753 .08862 L
.10534 .08682 L
.11379 .0872 L
.12225 .08951 L
.12981 .09362 L
.13594 .09907 L
.14028 .1053 L
.1426 .11185 L
.14313 .11812 L
s
[ .05 .02 .01 .02 .01 .02 .01 .02 ] 0 setdash
.97619 .06559 m
.84768 .13261 L
.74875 .20065 L
.6706 .26278 L
.60086 .28001 L
.52781 .27333 L
.45591 .26472 L
.39014 .26032 L
.33304 .26032 L
.28523 .26259 L
.2477 .26122 L
.21662 .25446 L
.18951 .24432 L
.16536 .2325 L
.14375 .22003 L
.12523 .20703 L
.10953 .193 L
.09599 .17841 L
.08415 .16368 L
.07394 .1493 L
.06551 .13531 L
.05865 .12181 L
.05315 .10894 L
.04907 .09687 L
.04644 .08573 L
.04529 .07549 L
.04558 .06631 L
.04743 .0583 L
.0509 .05151 L
.05595 .04604 L
.06258 .04199 L
.07052 .03947 L
.07938 .03852 L
.08855 .03908 L
.09723 .04107 L
.10474 .04414 L
.11044 .04797 L
.11409 .05215 L
.11564 .05628 L
s
[ .05 .02 .01 .02 .01 .02 .01 .02 .01 .02 ] 0 setdash
.97619 .06559 m
.84772 .13251 L
.74477 .16626 L
.63477 .16767 L
.52889 .17063 L
.43901 .18116 L
.36785 .19647 L
.31468 .20675 L
.27124 .20966 L
.23346 .20858 L
.20025 .20581 L
.17199 .20118 L
.14813 .19369 L
.12741 .18413 L
.10901 .17354 L
.09314 .16212 L
.07954 .14993 L
.06764 .13737 L
.05735 .12483 L
.04868 .11238 L
.04137 .10021 L
.03535 .08853 L
.03063 .0774 L
.02711 .06691 L
.02484 .05719 L
.02381 .04829 L
.02408 .04027 L
.0257 .03322 L
.02872 .02717 L
.03315 .02225 L
.03895 .01848 L
.04594 .01597 L
.05381 .01472 L
.06201 .01473 L
.06985 .01587 L
.07666 .01797 L
.08191 .02073 L
.08533 .02384 L
.08687 .02699 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore

