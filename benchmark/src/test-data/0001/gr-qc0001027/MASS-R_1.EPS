%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 91.5625 3.1875 321.938 145.5
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 148.688 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
91.562500 145.500000 translate
1.000000 -1.000000 scale
0.000000 0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		230.375000 def
/Mheight	142.312500 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.617444 0.167012 0 1.95037 [
[.11641 -0.0125 -6 -9 ]
[.11641 -0.0125 6 0 ]
[.28342 -0.0125 -6 -9 ]
[.28342 -0.0125 6 0 ]
[.45043 -0.0125 -6 -9 ]
[.45043 -0.0125 6 0 ]
[.61744 -0.0125 -3 -9 ]
[.61744 -0.0125 3 0 ]
[.78446 -0.0125 -3 -9 ]
[.78446 -0.0125 3 0 ]
[.95147 -0.0125 -3 -9 ]
[.95147 -0.0125 3 0 ]
[ 0 0 -0.125 0 ]
[.5 -0.0125 -11 -21 ]
[.5 -0.0125 11 -9 ]
[-0.0125 .09752 -24 -4.5 ]
[-0.0125 .09752 0 4.5 ]
[-0.0125 .19504 -18 -4.5 ]
[-0.0125 .19504 0 4.5 ]
[-0.0125 .29256 -24 -4.5 ]
[-0.0125 .29256 0 4.5 ]
[-0.0125 .39007 -18 -4.5 ]
[-0.0125 .39007 0 4.5 ]
[-0.0125 .48759 -24 -4.5 ]
[-0.0125 .48759 0 4.5 ]
[-0.0125 .58511 -18 -4.5 ]
[-0.0125 .58511 0 4.5 ]
[ 0 0 -0.125 0 ]
[-0.01875 .30902 -34.125 -6 ]
[-0.01875 .30902 -24 6 ]
[ 0 .61803 .125 0 ]
[ 1 0 .125 0 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.11641 0 m
.11641 .00625 L
s
[(-3)] .11641 -0.0125 0 1 Mshowa
.28342 0 m
.28342 .00625 L
s
[(-2)] .28342 -0.0125 0 1 Mshowa
.45043 0 m
.45043 .00625 L
s
[(-1)] .45043 -0.0125 0 1 Mshowa
.61744 0 m
.61744 .00625 L
s
[(0)] .61744 -0.0125 0 1 Mshowa
.78446 0 m
.78446 .00625 L
s
[(1)] .78446 -0.0125 0 1 Mshowa
.95147 0 m
.95147 .00625 L
s
[(2)] .95147 -0.0125 0 1 Mshowa
.125 Mabswid
.14981 0 m
.14981 .00375 L
s
.18321 0 m
.18321 .00375 L
s
.21662 0 m
.21662 .00375 L
s
.25002 0 m
.25002 .00375 L
s
.31682 0 m
.31682 .00375 L
s
.35023 0 m
.35023 .00375 L
s
.38363 0 m
.38363 .00375 L
s
.41703 0 m
.41703 .00375 L
s
.48383 0 m
.48383 .00375 L
s
.51724 0 m
.51724 .00375 L
s
.55064 0 m
.55064 .00375 L
s
.58404 0 m
.58404 .00375 L
s
.65085 0 m
.65085 .00375 L
s
.68425 0 m
.68425 .00375 L
s
.71765 0 m
.71765 .00375 L
s
.75105 0 m
.75105 .00375 L
s
.81786 0 m
.81786 .00375 L
s
.85126 0 m
.85126 .00375 L
s
.88466 0 m
.88466 .00375 L
s
.91807 0 m
.91807 .00375 L
s
.08301 0 m
.08301 .00375 L
s
.0496 0 m
.0496 .00375 L
s
.0162 0 m
.0162 .00375 L
s
.98487 0 m
.98487 .00375 L
s
.25 Mabswid
0 0 m
1 0 L
s
gsave
.5 -0.0125 -72 -25 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 20 translate 1 -1 scale
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(rho) show
1.000 setlinewidth
grestore
0 .09752 m
.00625 .09752 L
s
[(0.05)] -0.0125 .09752 1 0 Mshowa
0 .19504 m
.00625 .19504 L
s
[(0.1)] -0.0125 .19504 1 0 Mshowa
0 .29256 m
.00625 .29256 L
s
[(0.15)] -0.0125 .29256 1 0 Mshowa
0 .39007 m
.00625 .39007 L
s
[(0.2)] -0.0125 .39007 1 0 Mshowa
0 .48759 m
.00625 .48759 L
s
[(0.25)] -0.0125 .48759 1 0 Mshowa
0 .58511 m
.00625 .58511 L
s
[(0.3)] -0.0125 .58511 1 0 Mshowa
.125 Mabswid
0 .0195 m
.00375 .0195 L
s
0 .03901 m
.00375 .03901 L
s
0 .05851 m
.00375 .05851 L
s
0 .07801 m
.00375 .07801 L
s
0 .11702 m
.00375 .11702 L
s
0 .13653 m
.00375 .13653 L
s
0 .15603 m
.00375 .15603 L
s
0 .17553 m
.00375 .17553 L
s
0 .21454 m
.00375 .21454 L
s
0 .23404 m
.00375 .23404 L
s
0 .25355 m
.00375 .25355 L
s
0 .27305 m
.00375 .27305 L
s
0 .31206 m
.00375 .31206 L
s
0 .33156 m
.00375 .33156 L
s
0 .35107 m
.00375 .35107 L
s
0 .37057 m
.00375 .37057 L
s
0 .40958 m
.00375 .40958 L
s
0 .42908 m
.00375 .42908 L
s
0 .44858 m
.00375 .44858 L
s
0 .46809 m
.00375 .46809 L
s
0 .5071 m
.00375 .5071 L
s
0 .5266 m
.00375 .5266 L
s
0 .5461 m
.00375 .5461 L
s
0 .56561 m
.00375 .56561 L
s
0 .60461 m
.00375 .60461 L
s
.25 Mabswid
0 0 m
0 .61803 L
s
gsave
-0.01875 .30902 -95.125 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 20 translate 1 -1 scale
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(m) show
1.000 setlinewidth
grestore
.11641 .61178 m
.11641 .61803 L
s
.28342 .61178 m
.28342 .61803 L
s
.45043 .61178 m
.45043 .61803 L
s
.61744 .61178 m
.61744 .61803 L
s
.78446 .61178 m
.78446 .61803 L
s
.95147 .61178 m
.95147 .61803 L
s
.125 Mabswid
.14981 .61428 m
.14981 .61803 L
s
.18321 .61428 m
.18321 .61803 L
s
.21662 .61428 m
.21662 .61803 L
s
.25002 .61428 m
.25002 .61803 L
s
.31682 .61428 m
.31682 .61803 L
s
.35023 .61428 m
.35023 .61803 L
s
.38363 .61428 m
.38363 .61803 L
s
.41703 .61428 m
.41703 .61803 L
s
.48383 .61428 m
.48383 .61803 L
s
.51724 .61428 m
.51724 .61803 L
s
.55064 .61428 m
.55064 .61803 L
s
.58404 .61428 m
.58404 .61803 L
s
.65085 .61428 m
.65085 .61803 L
s
.68425 .61428 m
.68425 .61803 L
s
.71765 .61428 m
.71765 .61803 L
s
.75105 .61428 m
.75105 .61803 L
s
.81786 .61428 m
.81786 .61803 L
s
.85126 .61428 m
.85126 .61803 L
s
.88466 .61428 m
.88466 .61803 L
s
.91807 .61428 m
.91807 .61803 L
s
.08301 .61428 m
.08301 .61803 L
s
.0496 .61428 m
.0496 .61803 L
s
.0162 .61428 m
.0162 .61803 L
s
.98487 .61428 m
.98487 .61803 L
s
.25 Mabswid
0 .61803 m
1 .61803 L
s
.99375 0 m
1 0 L
s
.99375 .09752 m
1 .09752 L
s
.99375 .19504 m
1 .19504 L
s
.99375 .29256 m
1 .29256 L
s
.99375 .39007 m
1 .39007 L
s
.99375 .48759 m
1 .48759 L
s
.99375 .58511 m
1 .58511 L
s
.125 Mabswid
.99625 .0195 m
1 .0195 L
s
.99625 .03901 m
1 .03901 L
s
.99625 .05851 m
1 .05851 L
s
.99625 .07801 m
1 .07801 L
s
.99625 .11702 m
1 .11702 L
s
.99625 .13653 m
1 .13653 L
s
.99625 .15603 m
1 .15603 L
s
.99625 .17553 m
1 .17553 L
s
.99625 .21454 m
1 .21454 L
s
.99625 .23404 m
1 .23404 L
s
.99625 .25355 m
1 .25355 L
s
.99625 .27305 m
1 .27305 L
s
.99625 .31206 m
1 .31206 L
s
.99625 .33156 m
1 .33156 L
s
.99625 .35107 m
1 .35107 L
s
.99625 .37057 m
1 .37057 L
s
.99625 .40958 m
1 .40958 L
s
.99625 .42908 m
1 .42908 L
s
.99625 .44858 m
1 .44858 L
s
.99625 .46809 m
1 .46809 L
s
.99625 .5071 m
1 .5071 L
s
.99625 .5266 m
1 .5266 L
s
.99625 .5461 m
1 .5461 L
s
.99625 .56561 m
1 .56561 L
s
.99625 .60461 m
1 .60461 L
s
.25 Mabswid
1 0 m
1 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.006 w
[ .05 .02 ] 0 setdash
.02381 .15763 m
.07367 .21348 L
.11493 .27019 L
.15035 .32565 L
.18157 .37841 L
.20965 .427 L
.2353 .47047 L
.25905 .50805 L
.28128 .53947 L
.30226 .5645 L
.32222 .58331 L
.34133 .59616 L
.35974 .60347 L
.37757 .60577 L
.39489 .60364 L
.41179 .5977 L
.42834 .58854 L
.44458 .57675 L
.46057 .56289 L
.47633 .54743 L
.49191 .53083 L
.50733 .51352 L
.52261 .49583 L
.53778 .47806 L
.55284 .46049 L
.56782 .44334 L
.58273 .42678 L
.59758 .41101 L
.61238 .39616 L
.62713 .38236 L
.64184 .3697 L
.65653 .35834 L
.67118 .34834 L
.68581 .33979 L
.70042 .33277 L
.71502 .32735 L
.7296 .32358 L
.74417 .32145 L
.75873 .32088 L
.77328 .32191 L
.78782 .32424 L
.80236 .32768 L
.81689 .33196 L
.83142 .3369 L
.84595 .3421 L
.86047 .34729 L
.87499 .35239 L
.88951 .35703 L
.90402 .36129 L
.91854 .36492 L
Mistroke
.93305 .36792 L
Mfstroke
[ .05 .02 .01 .02 ] 0 setdash
.02381 .15763 m
.07367 .21348 L
.11493 .27019 L
.15035 .32565 L
.18157 .37841 L
.20965 .427 L
.2353 .47047 L
.25905 .50805 L
.28128 .53947 L
.30226 .5645 L
.32222 .58331 L
.34133 .59616 L
.35974 .60347 L
.37757 .60577 L
.39674 .60334 L
.42257 .59125 L
.44857 .5691 L
.47326 .54153 L
.49646 .51189 L
.51832 .48214 L
.53904 .45327 L
.5588 .42617 L
.57777 .40085 L
.59608 .37756 L
.61383 .35638 L
.63124 .33732 L
.65086 .32094 L
.67094 .30762 L
.69071 .29699 L
.70998 .28868 L
.7287 .28257 L
.74692 .27842 L
.76467 .27612 L
.78281 .27546 L
.80185 .27635 L
.82076 .27851 L
.83932 .28152 L
.85746 .28511 L
.87524 .28894 L
s
[ .05 .02 .01 .02 .01 .02 ] 0 setdash
.02381 .15763 m
.07367 .21348 L
.11493 .27019 L
.15035 .32565 L
.18157 .37841 L
.20965 .427 L
.23861 .46912 L
.27602 .48301 L
.31037 .4725 L
.34083 .45253 L
.36811 .43048 L
.39294 .40956 L
.41589 .39085 L
.43735 .37434 L
.45842 .35966 L
.48155 .34564 L
.50423 .33087 L
.52594 .3153 L
.54666 .2996 L
.56647 .28409 L
.58558 .26907 L
.60582 .25497 L
.62604 .24184 L
.64574 .22966 L
.66484 .21835 L
.68343 .20804 L
.70275 .1989 L
.72199 .19119 L
.74082 .18487 L
.7592 .18005 L
.77807 .17681 L
.79688 .17532 L
.81533 .17563 L
.83376 .17756 L
.85241 .18098 L
.87078 .18552 L
.88915 .19072 L
.90764 .19617 L
.92585 .2014 L
s
[ .05 .02 .01 .02 .01 .02 .01 .02 ] 0 setdash
.02381 .15763 m
.07367 .21348 L
.11493 .27019 L
.15691 .32196 L
.20634 .33632 L
.24783 .33076 L
.28284 .32358 L
.31326 .31992 L
.3404 .31991 L
.36667 .32181 L
.39442 .32066 L
.42052 .31502 L
.44478 .30658 L
.46742 .29673 L
.48922 .28634 L
.51187 .2755 L
.53384 .26381 L
.55484 .25165 L
.57494 .23937 L
.59556 .22739 L
.61597 .21573 L
.63575 .20448 L
.65508 .19375 L
.6748 .18369 L
.69418 .17441 L
.71309 .16587 L
.73231 .15822 L
.75129 .15155 L
.76998 .14589 L
.78889 .14133 L
.80751 .13796 L
.82617 .13586 L
.84476 .13506 L
.86325 .13553 L
.88177 .13718 L
.90019 .13975 L
.9186 .14294 L
.93699 .14642 L
.95531 .14986 L
s
[ .05 .02 .01 .02 .01 .02 .01 .02 .01 .02 ] 0 setdash
.02381 .15763 m
.0741 .2134 L
.13812 .24152 L
.19041 .2427 L
.23222 .24517 L
.26728 .25394 L
.29917 .2667 L
.3323 .27527 L
.36252 .27769 L
.38983 .27679 L
.41491 .27449 L
.44063 .27063 L
.46524 .26438 L
.48835 .25641 L
.51048 .24759 L
.53292 .23807 L
.55455 .22791 L
.57524 .21744 L
.59616 .207 L
.61666 .19662 L
.63651 .18648 L
.65654 .17674 L
.67621 .16747 L
.69557 .15873 L
.715 .15062 L
.73403 .14321 L
.75319 .13652 L
.77205 .13064 L
.79096 .12561 L
.80966 .1215 L
.82842 .11837 L
.847 .11627 L
.86562 .11522 L
.88413 .11523 L
.90259 .11619 L
.92107 .11793 L
.93948 .12024 L
.95784 .12283 L
.97619 .12545 L
s
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore

